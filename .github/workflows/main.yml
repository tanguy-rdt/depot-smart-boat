name: SmartBoat GUI Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04]

    runs-on: ${{ matrix.platform }}    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: install debian dependencies 
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y curl build-essential gcc libssl-dev pkg-config

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        
      - name: Run stub build 
        run: cargo build --release

      - name: Move stub executable
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          mkdir -p smart-boat-debian/usr/bin/
          cp target/release/smart-boat smart-boat-debian/usr/bin/smart-boat-stub
        if: matrix.platform == 'macos-latest'
        run: |
          mkdir -p smart-boat-macos.app/Contents/MacOS/
          cp target/release/smart-boat smart-boat-macos.app/Contents/MacOS/smart-boat

      - name: Run natif build (debian only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          cargo clean
          cargo build --release --features=on_target
          cp target/release/smart-boat smart-boat-debian/usr/bin/smart-boat

      - name: Create package
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          dpkg-deb --build smart-boat-debian/
        if: matrix.platform == 'macos-latest'
        run: |
          hdiutil create -volname "SmartBoatStubGUI" -srcfolder smart-boat-macos.app -ov -format UDZO SmartBoatStubGUI.dmg

      - name: Get tag name
        id: tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      - name: Upload package to artifact
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v2
        with:
          name: smart-boat-debian
          path: smart-boat-debian.deb 
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: smart-boat-macos
          path: SmartBoatStubGUI.dmg

      - name: Add package to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            smart-boat-debian.deb
            SmartBoatStubGUI.dmg
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Smart Boat GUI ${{ steps.tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}